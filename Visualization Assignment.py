# -*- coding: utf-8 -*-
"""Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d8hG9BD2EEWq6MaBoDnimLnwQddfs8JK
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Reading Data
data = pd.read_csv('https://raw.githubusercontent.com/nethajinirmal13/Training-datasets/main/clean_titanic.csv')

data

"""Cleaning the Data"""

#Checking the unique countries present in the datasent
data['country'].unique()

#Checking the values inside the column
data['class'].unique()

#removing unwanted columns
data=data.drop(['ticketno','fare','survived'], axis = 1)

others=data['country'].value_counts()[4:].sum()

others

#Summing up all other countires to others
data['country'] = data['country'].replace(['Lebanon','Finland','Scotland','Canada','Norway','France','Belgium','Northern Ireland','Wales','Bulgaria','Switzerland','Channel Islands','Croatia (Modern)','Croatia','Italy','Spain','India','Hungary','Denmark','Argentina','South Africa','Germany','Turkey','Australia','Slovenia','Bosnia','Poland','Austria','Netherlands','Greece','Uruguay','Russia','Peru','Siam','Syria','China/Hong Kong','Japan','Latvia','Yugoslavia','Slovakia (Modern day)','Egypt','Cuba','Mexico','Guyana'],'Others')

data['country'].value_counts()

data

#Grouping the countries to get the nationality of each person
dx = data.groupby('country').size()

dx

dx = dx.reset_index()

#Creating a dataset of the count of the nationality
df = pd.DataFrame(dx)

df

df.rename(columns = {0:'Crew Members'}, inplace = True)

df

#Defining the function to create the plot
def pie_diagram(pied):
  
  #Setting the size of the graph
  plt.figure(figsize=(15,10))
  
  #Setting the pie chart
  plt.pie(pied["Crew Members"], labels=pied["country"], autopct="%1.f%%", wedgeprops = {'edgecolor':'black'})
  plt.title("Crew Members")
  plt.show()

pie_diagram(df)

#Importing thr libraires
import pandas as pd
import matplotlib.pyplot as plt
import urllib.request

def create_bar_chart(url):
    # Load the CSV file into a pandas DataFrame
    response = urllib.request.urlopen(url)
    df = pd.read_csv(response)
    
    # Extract the data for the chart
    x_values = df['class'].unique()
    y_values = df['class'].value_counts()
    
    # Create the bar chart
    plt.figure(figsize=(15,10))
    plt.bar(x_values, y_values)
    
    # Add labels and a title
    plt.xlabel('class')
    plt.ylabel('Passenger Count')
    plt.title('Passenger Count by class')
    
    # Display the chart
    plt.show()

create_bar_chart('https://raw.githubusercontent.com/nethajinirmal13/Training-datasets/main/clean_titanic.csv')

#Reading the dataset
data = pd.read_excel('/content/drive/MyDrive/API_SP.POP.TOTL.MA.IN_DS2_en_excel_v2_4904992.xls')

data

#Slicing the data and storing it in another variable
df = data[2:]

df

#Naming the unamed column
df = df.rename(columns=df.iloc[0])

df

#Changing the index to Country Code
df = df.set_index('Country Code')

df

#Checking the unique country names present in the dataset
df['Country Name'].unique()

##Selecting the continent names from the dataset and storing them in a new variable
Continent = df.loc[df['Country Name'].isin(['European Union', 'Australia', 'Latin America & Caribbean', 'North America', 'East Asia & Pacific'])]

Continent

#Dropping unwanted columns
Continent.drop(['Indicator Code', 'Indicator Name'], axis=1, inplace = True)

Continent

#Converting all columns to integer type
Continent = Continent.iloc[:,1:].astype(int)

Continent

Continent.columns

Continent

#Slicing the datas required for the plot
Continent = Continent.iloc[:,27:32]

#Transposing the dataset to plot the data
Continent = Continent.T

Continent

#Resetting the index
Continent = Continent.reset_index()

#Renaming wrong column names
Continent.rename(columns = {'index':'Year'}, inplace = True)

Continent

#Changing the column type to integer
Continent["Year"] = Continent["Year"].astype("int64")

Continent

def line_diagram(cont):

  #Setting the figure size
  plt.figure(figsize = (10,8))
  #Plotting the data
  plt.plot(cont["Year"], cont["AUS"], label="Australia")
  plt.plot(cont["Year"], cont["EAS"], label="East Asia")
  plt.plot(cont["Year"], cont["EUU"], label="Europe")
  plt.plot(cont["Year"], cont["LCN"], label="Latin America")
  plt.plot(cont["Year"], cont["NAC"], label="North America")

  #Labeling the plot
  plt.xlabel("Year")
  plt.ylabel("Population in Billions")
  #Titling the plot
  plt.title("Population of Continents")
  
 # plt.xlim(20, 2021)
  plt.legend(prop = {'size': 10})
  plt.show()

#Calling the variable
line_diagram(Continent)

